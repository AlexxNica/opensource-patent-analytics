read.csv("patentscope_pizza_10000_ft.csv")
patentscope_pizza_10000_ft <- read.csv("~/Desktop/opensource-patent-analytics/Patent Datasets/patentscope_pizza_10000_ft.csv", stringsAsFactors=FALSE)
View(patentscope_pizza_10000_ft)
nrows(patentscope_pizza_10000_ft)
nrows("patentscope_pizza_10000_ft")
nrows(patentscope_pizza_10000_ft)
nrows
library("patentscope_pizza_10000_ft")
ls("patentscope_pizza_10000_ft")
table("patentscope_pizza_10000_ft")
pizza <- read.table("patentscope_pizza_10000_ft", nrows = 100)
pizza <- read.table("patentscope_pizza_10000_ft", nrows = 100)
pizza <- read.table(patentscope_pizza_10000_ft, nrows = 100)
pizza <- read.csv("~/Desktop/opensource-patent-analytics/Patent Datasets/pizza.csv", stringsAsFactors=FALSE)
View(pizza)
ls(pizza)
pizza(Applicants, nrows = 20)
pizza(Applicants)
pizza("Applicants", nrows = 20)
library("dplyr", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
save.image()
plot("pizza"$Publication.Date)
view(Publication.Date)
view("pizza", "Publication.Date")
View("pizza", "Publication.Date")
View(pizza)
ls(pizza)
ls(pizza, nrows = 10)
Publication.Number
number <- ("Publication.Number")
number
pubdate <- ("Publication.Date")
pubdate
separate(pizza, pubdate, into, sep = "[^[:alnum:]]+", remove = TRUE, convert = FALSE, extra = "error")
separate(pizza, pubdate, "day", "month", "year", sep = "[^[:alnum:]]+", remove = TRUE, convert = FALSE, extra = "error")
extract)(pizza, pubdate, "day", "month", "year", regex = "([[:alnum]]+)", remove = TRUE, convert = FALSE)
extract)(pizza, pubdate, "day", "month", "year", regex = "([[:alnum]]+)", remove = TRUE, convert = FALSE)
extract(pizza, pubdate, "day", "month", "year", regex = "([[:alnum]]+)", remove = TRUE, convert = FALSE)
extract(pizza, pubdate, "day", "month", "year", regex = "([[:alnum]].)", remove = TRUE, convert = FALSE)
library(dplyr)
df <- data.frame(x = c("a.b", "a.d", "b.c")
df %>% extract(x, "A")
extract_numeric(pubdate)
ls(pubdate)
separate(pizza, pubdate, "day", "month", "year", sep = "[^[:alnum:]]+", remove = TRUE, convert = FALSE, extra = "error")
library(nycflights13)
```{r}
dim(flights)
head(flights)
TaxiOut (int), Cancelled (int), CancellationCode (chr), Diverted (int)
Variables not shown: ArrDelay (int), DepDelay (int), Origin (chr), Dest (chr), Distance (int), TaxiIn (int), TaxiOut (int), Cancelled (int), CancellationCode (chr), Diverted (int)
tbl_df
nyflights13
nycflights13
View(nycflights13)
flights
filter(flights, month == 1, day == 1)
filter(flights, Month == 1, day == 1)
filter(flights, Month == 1, DayofMonth == 1)
filter(flights, month == 1 | month == 2)
filter(flights, Month == 1 | DayofMonth == 2)
arrange(flights, Year, Month, DayOfWeek)
arrange(flights, desc(ArrDelay))
select(flights, Year, Month, DayofMonth)
select(flighhts, Year:DayofMonth)
select(flights, Year:DayofMonth)
select(flights, -(Year:DayofMonth))
```{r}
select(flights, TailNum =tailnum)
select(flights, TailNum = tailnum)
select(flights, tailnum = TailNum)
tailnum
select(tailnum)
rename(flights, doyofweek = DayofWeek)
rename(flights, doyofweek = DayOfWeek)
distinct(select(flights, tailnum))
rename(flights, tailnum -TailNum)
rename(flights, tailnum = TailNum)
distinct(select(flights, tailnum))
distinct(select(flights, TailNum))
mutate(flights, gain = ArrDelay - DepDelay, speed = Distance / AirTime * 60)
)
```
mutate(flights, gain = arr_delay - dep_delay, gain_per_hour = gain / (air_time / 60))
mutate(flights, gain = ArrDelay - DepDelay, gain_per_hour = gain / (air_time / 60))
mutate(flights, gain = ArrDelay - DepDelay, gain_per_hour = gain / (AirTime / 60))
transmute(flights, gain = ArrDelay - Depdelay, gain_per_hour = gain / (air_time / 60))
transmute(flights, gain = ArrDelay - DepDelay, gain_per_hour = gain / (air_time / 60))
transmute(flights, gain = ArrDelay - DepDelay, gain_per_hour = gain / (AirTime / 60))
flights
summarise(flights, delay = mean(DepDelay, na.rm = TRUE))
sample_n(flights, 10)
, na.rm = TRUE
?markdown
delay <- filter(delay, count > 20, dist < 2000)
delay <- filter(delay, count > 20, dist < 2000)
delay <- filter(Delay, count > 20, dist < 2000)
delay <- filter(delay, count > 20, dist < 2000)
flights
y_TailNum <- group_by(flights, TailNum)
ggplot(delay, aes(dist, delay)) +
geom_point(aes(size = count), alpha = 1/2) +
geom_smooth() +
scale_size_area()
library("ggplot2", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
y_TailNum <- group_by(flights, TailNum)
> ggplot(delay, aes(dist, delay)) +
+     geom_point(aes(size = count), alpha = 1/2) +
+     geom_smooth() +
+     scale_size_area()
ggplot2(delay, aes(dist, delay)) +
+     geom_point(aes(size = count), alpha = 1/2) +
+     geom_smooth() +
+     scale_size_area()
ggplot(delay, aes(dist, delay)) +
+     geom_point(aes(size = count), alpha = 1/2) +
+     geom_smooth() +
+     scale_size_area()
dist = mean(Distance, na.rm = TRUE),
dist = mean("Distance"", na.rm = TRUE),
dist = mean("Distance", na.rm = TRUE),
dist = mean(Distance, na.rm = TRUE),
dist = mean(Distance, na.rm = TRUE)
delay <- summarise(by_TailNum, count = n(), dist = mean(Distance, na.rm = TRUE), delay = mean(ArrDelay, na.rm = TRUE)) delay <- filter(delay, count > 20, dist < 2000)
ritonavir <- read.csv("~/Desktop/opensource-patent-analytics/Patent Datasets/ritonavir.csv")
View(ritonavir)
dim(ritonavir)
head(ritonavir)
tbl_df
ritonavir
ritonavir(n, 10)
view(ritonavir)
View(ritonavir)
library(ritonavir)
tbl_df(ritonavir)
rit
ritonavir
hiv <- tbl_df(ritonavir)
hiv
print(hiv, n =20) ##Gets 20 rows
```{r}
data.frame(head(hiv))
data.frame(names(hiv))
names(hiv))
names(hiv)
filter(hiv, priority.country)
filter(hiv, publication.year)
filter(hiv, publication.number)
filter(hiv, inventors)
arrange(priority.country, earliest.priority.date)
arrange(hiv, priority.country, earliest.priority.date)
ritonavir <- read.csv("~/Desktop/opensource-patent-analytics/Patent Datasets/ritonavir.csv", stringsAsFactors=FALSE)
View(ritonavir)
name(ritonavir)
names(ritonavir)
2. names(https://www.youtube.com/watch?v=jWjqLW-u3hc
```{r}
hiv <- tbl_df(ritonavir)
library("plyr", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
library("dplyr", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
hiv <- tbl_df(ritonavir)
hiv
names(hiv)
filter(hiv, publication.date)
filter(hiv, publication.year)
To arrange
arrange(hiv, priority.country, earliest.priority.date)
dim(hiv)
head(hiv, n =20)
head(hiv)
head(hiv, n = 10)
data.frame(hiv)
arrange(hiv, priority.country, earliest.priority.date)
arrange(hiv, desc(priority.country))
select(hiv, "priority.country")
select(hiv, priority.country)
filter(hiv, publication.year)
select(hiv, priority.country, n = 40)
arrange(hiv, priority.country, earliest.priority.date)
select(hiv, priority.country, earliest.priority.date)
arrange(hiv, desc(priority.country))
select(hiv, priority.country)
select(hiv, priority.country, n = 20)
select(hiv, priority.country, n = 30)
select(hiv, priority.country, publication.country)
as.numeric(publication.year)
as.numeric("application.date")
application.date
view(hiv, "application.date")
View(hiv, "application.date"")
ls
filter(hiv, applilcation.date)
bye()
library("plyr", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
library("dplyr", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
ritonavir <- read.csv("~/Desktop/opensource-patent-analytics/Patent Datasets/ritonavir.csv", stringsAsFactors=FALSE)
View(ritonavir)
hiv <- tbl_df(ritonavir)
hiv
select(hiv, publication.year, publication.date)
library("tidyr", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
separate(publication.date, into = c("year", "month", "datetime"), sep = "\\-")
separate("publication.date", into = c("year", "month", "datetime"), sep = "\\-")
separate("publication.date", into = c("year"), sep = "\\-")
separate(hiv, publication.date = c("year", "month", "datetime"), sep = "\\-")
separate(hiv, "publication.date" = c("year", "month", "datetime"), sep = "\\-")
pizza <- read.csv("~/Desktop/opensource-patent-analytics/Patent Datasets/pizza.csv", stringsAsFactors=FALSE)
View(pizza)
pizza <- tbl_df(pizza)
pizza
separate(pizza, "publication.date" = c("day", "month", "year"), sep = "\\.")
as.data.frame(pizza) %>% separate(pizza, "Publication.Date", into = paste("day", "month", "year", sep = "."))
separate(pizza, "publication.date", into = paste("day", "month", "year"), sep = "\\.")
distinct(select(pizza, Publication.Number))
hiv
select(hiv, publication.number, starts_with("US"))
select(hiv, publication.number, contains("US"))
summarise(hiv)
hiv
library(tidyr)
vignett("tidy-data")
vignette("tidy-data")
demo(package = "tidyr")
so_15668870
demo(so-15668870)
library(mtcars)
install.packages("mtcars")
vignette("tidyr")
?tidyr
??tidyr
library(tb)
hiv <- tbl_df(ritonavir)
hiv
select(hiv, publication.number, priority.document, priority.country, earliest.priority.aate, earliest.priority.year, application.date, publication.date, publication.year)
select(hiv, publication.number, priority.document, priority.country, earliest.priority.date, earliest.priority.year, application.date, publication.date, publication.year)
print(hiv, n =20) ##Gets 20 rows
hiv_dates <- select(hiv, publication.number, priority.document, priority.country, earliest.priority.date, earliest.priority.year, application.date, publication.date, publication.year)
hiv_dates
hiv_dates
hiv_dates <- select(hiv, publication.number, priority.document, priority.country, earliest.priority.date, earliest.priority.year, application.date, publication.date, publication.year) ##selects the date and document columns and puts them into a new variable called hiv_dates
hiv_dates ##lists the contents of the selected columns
library(dplyr)
df <- data.frame(x = c("a.b", "a.d", "b.c"))
df %>% extract (x, "A")
df %>% extract(x, c("A", "B"), "([[:alnum:]]+)\\.([[:alnum:]]+)")
?%>%
??%>%
library("plyr", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
library("dplyr", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
hiv_dates <- select(hiv, publication.number, priority.document, priority.country, earliest.priority.date, earliest.priority.year, application.date, publication.date, publication.year) ##selects the date and document columns and puts them into a new variable called hiv_dates
hiv_dates ##lists the contents of the selected columns
separate(hiv, "earliest.priority.date", into, sep = "[^[:alnum:]]+", remove = TRUE, convert = FALSE, extra = "error", ...)
separate(hiv, "earliest.priority.date", into, sep = "[^[:alnum:]]+", remove = TRUE, convert = FALSE, extra = "error", ...)
hiv separate(hiv, "earliest.priority.date", into, sep = "[^[:alnum:]]+", remove = TRUE, convert = FALSE, extra = "error", ...)
hiv %>%
tbl_df() %>%
mutate(earliest.priority.date = strsplit(earliest.priority.date, "-"))%>%
unnest(earliest.priority.date) %>%
separate(earliest.priority.date, c("type", "value"), ":")
> hiv %>%
+ tbl_df() %>%
+ mutate(earliest.priority.date = strsplit(earliest.priority.date, "-"))
install.packages("str")
mtcars
t(mtcars)
t(mtcars)
mtcars
library("reshape2", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
mtcars
t(mtcars)
data.frame(attr = c(1,30,4,6), type=c('foo_and_bar','foo_and_bar_2'))
library(stringr)
str_split_fixed(before$type, "_and_", 2)
library(stringr)
str_split_fixed(before$type, "_and_", 2)
data.frame(attr = c(1,30,4,6), type=c('foo_and_bar','foo_and_bar_2'))
str_split_fixed(before$type, "_and_", 2)
fruits <- c("apples and oranges and pears and bananas", "pineapples and mangos and guavas")
str_split_fixed(fruits, " and ", 3)
str_split_fixed(fruits, " and ", 4)
fruit <- c("apple", "banana", "pear", "pinapple")
str_detect(fruit, "a")
str_detect(fruit, "^a")
str_detect(fruit, "a$")
str_detect(fruit, "b")
str_detect(fruit, "[aeiou]")
fruits <- c("one apple", "two pears", "three bananas")
str_replace(fruits, "[aeiou]", "-")
str_replace_all(fruits, "[aeiou]", "-")
str_replace_all(fruits, "([aeiou])", "")
str_replace_all(fruits, "([aeiou])", "\\1\\1")
str_replace_all(fruits, "[aeiou]", c("1", "2", "3"))
str_replace_all(fruits, c("a", "e", "i"), "-")
hiv
hiv_dates
str_replace(earliest.priority.date, "[-]", "")
str_replace("earliest.priority.date", "[-]", "")
select(hiv_dates, "earliest.priority.year")
select(hiv_dates, "earliest.priority.date")
library(nycflights13)
nycflights13
view(nycflights13)
View(nycflights13)
flghts
library(nycflights13)
library("plyr", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
library("ggplot2", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
library("plyr", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
library("dplyr", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
})
})
hiv
select(earliest.priority.year)
select("earliest.priority.year")
tbl_df ##then type flights to view
flights
filter(flights, Month == 1, DayofMonth == 1)
arrange(flights, desc(ArrDelay))
install.packages("mend")
install.packages("gbif")
install.packages("rgbif")
library("devtools", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
library("tidyr", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
library("plyr", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
library("dplyr", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
library("devtools", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
pollutantmean <- /Users/colinbarnes/~coursera-repo/specdata, pollutant, id = 1:332) {
()
pollutantmean <- (/Users/colinbarnes/~coursera-repo/specdata, pollutant, id = 1:332)
pollutantmean <- (Users/colinbarnes/~coursera-repo/specdata, pollutant, id = 1:332)
pollutantmean <- (Users/colinbarnes/~coursera-repo/specdata, pollutant, id = 1:332)
pollutantmean <- (/Users/colinbarnes/Desktop, pollutant, id = 1:332)
pollutantmean <- function(/Users/colinbarnes/Desktop, pollutant, id = 1:332)
pollutantmean <- function(Users/colinbarnes/Desktop/specdata, pollutant, id = 1:332)
pollutantmean <- function(colinbarnes/Desktop/specdata, pollutant, id = 1:332)
pollutantmean <- function(specdata, pollutant, id = 1:332)
source("pollutantmean.R")
pollutantmean("specdata", "sulfate", 1:10)
pollutantmean
complete <- function(specdata, id = 1:332)
ls
complete
u = "http://en.wikipedia.org/wiki/List_of_countries_by_population"
tables = readHTMLTable(u)
tables = readHTMLTable(u)
install.packages("rworldmap")
rworldxtra
install.packages("rworldxtra")
library("rworldxtra", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
library("rworldmap", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
vignett('rworldmap')
vignette('rworldmap')
library(rworldmap)
data(countryExData)
countryExData[5:10,1:5]
sPDF <- joinCountryData2Map(countryExData, joinCode = "ISO3", nameJoinColumn = "ISO3V10")
par(mai=c(0,0,0.2,0),xaxs="i",yaxs="i")
mapCountryData( sPDF, nameColumnToPlot="BIODIVERSITY" )
mapParams <- mapCountryData( sPDF, nameColumnToPlot="BIODIVERSITY", addLegend=FALSE )
do.call( addMapLegend, c(mapParams, legendWidth=0.5, legendMar = 2))
library("tidyr", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
library("data.table", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
library("dplyr", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
getwd()
setwd(/Users/colinbarnes/Desktop/opensource-patent-analytics)
setwd(Users/colinbarnes/Desktop/opensource-patent-analytics)
setwd(opensource-patent-analytics)
setwd(opensource)
getwd
getwd()
library(specdata)
specdata
pizza <- read_csv("/Users/colinbarnes/Desktop/open_source_master/B_DATASETS/pizza_medium/pizza_medium_split/pizza.csv") ## insert your filename path inside quotations
library("tidyr", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
library("readr", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
library("dplyr", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
pizza <- read_csv("/Users/colinbarnes/Desktop/open_source_master/B_DATASETS/pizza_medium/pizza_medium_split/pizza.csv") ## insert your filename path inside quotations
pizza <- read_csv("/Users/colinbarnes/Desktop/open_source_master/B_DATASETS\ KEEP/pizza_medium/pizza_medium_split/pizza.csv") ## insert your filename path inside quotations
pizza
df <-pizza[ , c(1:29, 5)]
df
df1 <- separate(df, "inventors_cleaned", c(29:54), sep = ";", remove = FALSE, convert = FALSE, extra = "merge")
View(df1)
df <-pizza[ , c(1:29, 5)]
df
df <-pizza[ , c(1:4, 6:29, 5)]
df
df1 <- separate(df, "inventors_cleaned", c(29:54), sep = ";", remove = FALSE, convert = FALSE, extra = "merge")
df1
invcount <- select(df, "inventors_cleaned")
df
View(df)
invcount <- select(df, 5)
invcount <- separate(df, "inventors_cleaned", c(1:25), sep = ";", remove = TRUE, convert = FALSE, extra = "merge")
View(invcount)
invcount <- select(df, 5) ##must be the column integer for select (number, not the name)
View(invcount)
invcount1 <- separate(invcount, "inventors_cleaned", c(1:25), sep = ";", remove = TRUE, convert = FALSE, extra = "merge")
invcount1 <- separate(invcount, 1, c(1:25), sep = ";", remove = TRUE, convert = FALSE, extra = "merge")
invcount1 <- separate(invcount, 1, c(2:25), sep = ";", remove = FALSE, convert = FALSE, extra = "merge")
invcount1 <- separate(invcount, c(1:25), sep = ";", remove = FALSE, convert = FALSE, extra = "merge")
invcount1 <- separate(invcount, 1:25, sep = ";", remove = FALSE, convert = FALSE, extra = "merge")
invcount <- select(pizza, 5) ##must be the column integer for select (number, not the name)
invcount
invcount1 <- separate(invcount, "inventors_cleaned", c(1:25), sep = ";", remove = FALSE, convert = FALSE, extra = "merge")
View(invcount1)
invcount1 <- separate(invcount, "inventors_cleaned", c(1:25), sep = ";", remove = TRUE, convert = FALSE, extra = "merge")
View(invcount1)
summarise(invcount1)
inventor_count <- rowsum(invcount1, 1:25, reorder = FALSE, na.rm = TRUE)
inventor_count <- rowsum(invcount1, 1:9996, reorder = FALSE, na.rm = TRUE)
invcount1 <- separate(invcount, "inventors_cleaned", c(1:25), sep = ";", remove = TRUE, convert = TRUE, extra = "merge")
View(invcount1)
inventor_count <- rowsum(invcount1, 1:9996, reorder = FALSE, na.rm = TRUE)
invcount1
inventor_count <- rowsum(invcount1, 1:9996, reorder = FALSE, na.rm = TRUE)
inventor_count <- colsum(invcount1, 1:25, reorder = FALSE, na.rm = TRUE)
inventor_count <- colSums(invcount1, 1:25, reorder = FALSE, na.rm = TRUE)
inventor_count <- colSums(invcount1, 1:25, na.rm = TRUE)
View(inventor_count)
inventor_count <- sum(invcount1, na.rm = TRUE)
inventor_count <- sum(invcount1, 1:25, na.rm = TRUE)
summary(invcount1)
summary(invcount1, na.rm = TRUE)
summary(df1)
inventors_all <- gather(df1, inventors_count, inventors_all, 2:26, na.rm = FALSE, convert = FALSE)
View(inventors_all)
inventors_all <- gather(df1, inventors_count, inventors_all, 29:54, na.rm = TRUE, convert = FALSE)
View(inventors_all)
df1 <- separate(df, "inventors_cleaned", c(29:54), sep = ";", remove = TRUE, convert = FALSE, extra = "merge")
df1 <- separate(df, "inventors_cleaned", c(29:54), sep = ";", remove = TRUE, convert = FALSE, extra = "merge")
View(df1)
inventors_all <- gather(df1, inventors_count, inventors_all, 29:54, na.rm = TRUE, convert = FALSE)
View(inventors_all)
inventors_all
inventors <- select(inventors_all, inventors_all, title_cleaned, publication_year, publication_date, priority_date, priority_country_code_names, applicants_organisations, ipc_subclass_names, ipc_names, publication_number_espacenet_links)
View(inventors)
inventors <- select(inventors_all, inventors_all, title_cleaned, publication_year, publication_date, priority_date, priority_country_code_names, applicants_organisations,  publication_number_espacenet_links, ipc_subclass_codes, ipc_subclass_names, ipc_names, ipc_codes)
View(inventors)
inventors
ipc <- separate(inventors, "ipc_codes", c(12:22), sep = ";", remove = TRUE, convert = FALSE, extra = "merge")
ipc
inventors_ipc <- gather(ipc, ipc_count, ipc, 12:22, na.rm = TRUE, convert = FALSE)
inventors_ipc
View(inventors_ipc)
inventors <- select(inventors_all, inventors_all, title_cleaned, publication_year, publication_date, priority_date, priority_country_code_names, applicants_organisations,  publication_number_espacenet_links, ipc_names, ipc_codes, ipc_subclass_names, ipc_subclass_codes)
inventors
write_csv(inventors, "inventors.csv")
getwd()
setwd("/Users/colinbarnes/Desktop/open_source_master/B_DATASETS_KEEP/pizza_medium/pizza_medium_split")
write_csv(inventors, "inventors.csv")
ipc <- separate(inventors, "ipc_subclass_codes", c(12:22), sep = ";", remove = TRUE, convert = FALSE, extra = "merge")
ipc
inventors_ipc <- gather(ipc, ipc_subclass_count, ipc_subclass, 12:22, na.rm = TRUE, convert = FALSE)
inventors_ipc
View(inventors_ipc)
ipc <- separate(inventors, "ipc_subclass_codes", c(12:30), sep = ";", remove = TRUE, convert = FALSE, extra = "merge")
inventors_ipc <- gather(ipc, ipc_subclass_count, ipc_subclass, 12:30, na.rm = TRUE, convert = FALSE)
inventors_ipc
View(inventors_ipc)
inventors <- select(inventors_all, inventors_all, title_cleaned, publication_year, publication_date, priority_date, priority_country_code_names, applicants_organisations,  publication_number_espacenet_links, ipc_names, ipc_codes, ipc_subclass_codes, ipc_subclass_names)
getwd()
write_csv(inventors, "inventors.csv")
ipc <- separate(inventors, "ipc_subclass_names", c(12:30), sep = ";", remove = TRUE, convert = FALSE, extra = "merge")
View(ipc)
inventors <- select(inventors_all, inventors_all, title_cleaned, publication_year, publication_date, priority_date, priority_country_code_names, applicants_organisations,  publication_number_espacenet_links, ipc_names, ipc_codes, ipc_subclass_names, ipc_subclass_codes)
write_csv(inventors, "inventors.csv")
inventors_all
inventors <- select(inventors_all, inventors_all, title_cleaned, publication_year, publication_date, publication_country_code, publication_country_name, priority_date, priority_country_code, priority_country_code_names, applicants_organisations,  publication_number_espacenet_links, ipc_names, ipc_codes, ipc_subclass_names, ipc_subclass_codes)
write_csv(inventors, "inventors.csv")
inventors <- select(inventors_all, inventors_all, title_cleaned, publication_year, publication_date, publication_country_code, publication_country_name, priority_date, priority_country_code, priority_country_code_names, applicants_organisations, publication_number, publication_number_espacenet_links, ipc_names, ipc_codes, ipc_subclass_names, ipc_subclass_codes)
write_csv(inventors, "inventors.csv")
View(pizza)
pizza
dfa <-pizza[ , c(2:29, 1)]
dfa
pizza
dfa <-pizza[ , c(1:2, 4:29, 3)]
daf
dfa
dfa1 <- separate(dfa, "applicants_organisations", c(29:49), sep = ";", remove = TRUE, convert = FALSE, extra = "merge")
applicants_organisations <- gather(dfa1, applicants_orgs_count, applicants_orgs_all, 29:49, na.rm = TRUE, convert = FALSE)
applicants_organisations
View(applicants_organisations)
applicants <- select(applicants_organisations, applicants_orgs_all, inventors_cleaned, title_cleaned, publication_year, publication_date, publication_country_code, publication_country_name, priority_date, priority_country_code, priority_country_code_names, applicants_organisations, publication_number, publication_number_espacenet_links, ipc_names, ipc_codes, ipc_subclass_names, ipc_subclass_codes)
applicants <- select(applicants_orgs_all, inventors_cleaned, title_cleaned, publication_year, publication_date, publication_country_code, publication_country_name, priority_date, priority_country_code, priority_country_code_names, applicants_organisations, publication_number, publication_number_espacenet_links, ipc_names, ipc_codes, ipc_subclass_names, ipc_subclass_codes)
applicants <- select(applicants_organisations, applicants_orgs_all, inventors_cleaned, title_cleaned, publication_year, publication_date, publication_country_code, publication_country_name, priority_date, priority_country_code, priority_country_code_names, applicants_organisations, publication_number, publication_number_espacenet_links, ipc_names, ipc_codes, ipc_subclass_names, ipc_subclass_codes)
applicants <- gather(dfa1, applicants_orgs_count, applicants_orgs_all, 29:49, na.rm = TRUE, convert = FALSE)
View(applicants)
applicants <- select(applicants, applicants_orgs_all, inventors_cleaned, title_cleaned, publication_year, publication_date, publication_country_code, publication_country_name, priority_date, priority_country_code, priority_country_code_names, applicants_organisations, publication_number, publication_number_espacenet_links, ipc_names, ipc_codes, ipc_subclass_names, ipc_subclass_codes)
applicants <- select(applicants, applicants_orgs_all, inventors_cleaned, title_cleaned, publication_year, publication_date, publication_country_code, publication_country_name, priority_date, priority_country_code, priority_country_code_names, publication_number, publication_number_espacenet_links, ipc_names, ipc_codes, ipc_subclass_names, ipc_subclass_codes)
applicants
write_csv(applicants, "applicants.csv")
pizza
dfi <-pizza[ , c(1:6, 829, 7)] ### Move ipc_subclass_codes in column 7 to the end
dfi
pizza <- read_csv("/Users/colinbarnes/Desktop/open_source_master/B_DATASETS_KEEP/pizza_medium/pizza_medium_split/pizza.csv") ## insert your filename path inside quotations
dfi <-pizza[ , c(1:6, 8:29, 7)] ### Move ipc_subclass_codes in column 7 to the end
dfi
dfi1 <- separate(dfi, "ipc_codes", c(29:49), sep = ";", remove = TRUE, convert = FALSE, extra = "merge")
ipc <- gather(dfi1, ipc_subclass_count, ipc_subclass, 29:49, na.rm = TRUE, convert = FALSE)
View(ipc)
dfi <-pizza[ , c(1:9, 11:29, 10)] ### Move ipc_subclass_codes in column 7 to the end
dfi
dfi1 <- separate(dfi, "ipc_subclass_codes", c(29:49), sep = ";", remove = TRUE, convert = FALSE, extra = "merge")
ipc <- gather(dfi1, ipc_subclass_count, ipc_subclass, 29:49, na.rm = TRUE, convert = FALSE)
ipc
View(ipc)
ipc <- select(ipc, ipc_subclass, inventors_cleaned, title_cleaned, publication_year, publication_date, publication_country_code, publication_country_name, priority_date, priority_country_code, priority_country_code_names, publication_number, publication_number_espacenet_links, ipc_names, ipc_codes, ipc_subclass_names, ipc_subclass_codes)
ipc <- select(ipc, ipc_subclass, inventors_cleaned, title_cleaned, publication_year, publication_date, publication_country_code, publication_country_name, priority_date, priority_country_code, priority_country_code_names, publication_number, publication_number_espacenet_links, ipc_names, ipc_codes, ipc_subclass_names)
ipc
write_csv(ipc, "ipc_subclass.csv")
